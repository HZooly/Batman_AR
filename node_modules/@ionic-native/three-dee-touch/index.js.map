{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/three-dee-touch/index.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EAAE,UAAU,EAAE,MAAM,eAAe;OACnC,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,oBAAoB;OAC7C,EAAE,UAAU,EAAE,MAAM,iBAAiB;AA0D5C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+DG;AASH;IAAA;IAqEA,CAAC;IAnEC;;;OAGG;IAEH,mCAAW,GAAX,cAAkC,MAAM,CAAC,CAAC,CAAC;IAE3C;;;OAGG;IAIH,yCAAiB,GAAjB,cAA2D,MAAM,CAAC,CAAC,CAAC;IAEpE;;;;;;;OAOG;IAIH,6CAAqB,GAArB,UAAsB,YAA6C,IAAU,CAAC;IAE9E;;;OAGG;IACH,yCAAiB,GAAjB;QACE,MAAM,CAAC,IAAI,UAAU,CAAC,UAAA,QAAQ;YAC5B,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;gBACzB,MAAM,CAAC,aAAa,CAAC,iBAAiB,GAAG,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,QAAQ,CAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;gBACnD,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACtB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;;OAGG;IAIH,yCAAiB,GAAjB,cAA4B,CAAC;IAE7B;;OAEG;IAIH,0CAAkB,GAAlB,cAA6B,CAAC;IAEzB,wBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,4BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IA9DA;QAAC,OAAO,EAAE;;;;oDAAA;IAOV;QAAC,OAAO,CAAC;YACP,UAAU,EAAE,IAAI;SACjB,CAAC;;;;0DAAA;IAWF;QAAC,OAAO,CAAC;YACP,IAAI,EAAE,IAAI;SACX,CAAC;;;;8DAAA;IAsBF;QAAC,OAAO,CAAC;YACP,IAAI,EAAE,IAAI;SACX,CAAC;;;;0DAAA;IAMF;QAAC,OAAO,CAAC;YACP,IAAI,EAAE,IAAI;SACX,CAAC;;;;2DAAA;IApEJ;QAAC,MAAM,CAAC;YACN,UAAU,EAAE,eAAe;YAC3B,MAAM,EAAE,wBAAwB;YAChC,SAAS,EAAE,eAAe;YAC1B,IAAI,EAAE,0DAA0D;YAChE,SAAS,EAAE,CAAC,KAAK,CAAC;SACnB,CAAC;;qBAAA;IAuEF,oBAAC;AAAD,CAAC,AArED,IAqEC","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Cordova, Plugin } from '@ionic-native/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n\r\ndeclare var window: any;\r\n\r\nexport interface ThreeDeeTouchQuickAction {\r\n\r\n  /**\r\n   * Type that can be used in the onHomeIconPressed callback\r\n   */\r\n  type?: string;\r\n\r\n  /**\r\n   * Title\r\n   */\r\n  title: string;\r\n\r\n  /**\r\n   * Subtitle\r\n   */\r\n  subtitle?: string;\r\n\r\n  /**\r\n   * Icon type. Case insensitive\r\n   */\r\n  iconType?: string;\r\n\r\n  /**\r\n   * Icon template\r\n   */\r\n  iconTemplate?: string;\r\n\r\n}\r\n\r\nexport interface ThreeDeeTouchForceTouch {\r\n\r\n  /**\r\n   * Touch force\r\n   */\r\n  force: number;\r\n\r\n  /**\r\n   * Timestamp of action\r\n   */\r\n  timestamp: number;\r\n\r\n  /**\r\n   * X coordinate of action\r\n   */\r\n  x: number;\r\n\r\n  /**\r\n   * Y coordinate of action\r\n   */\r\n  y: number;\r\n\r\n}\r\n\r\n/**\r\n * @name 3D Touch\r\n * @description\r\n * @usage\r\n * Please do refer to the original plugin's repo for detailed usage. The usage example here might not be sufficient.\r\n * ```\r\n * import { ThreeDeeTouch, ThreeDeeTouchQuickAction, ThreeDeeTouchForceTouch } from '@ionic-native/three-dee-touch';\r\n *\r\n * constructor(private threeDeeTouch: ThreeDeeTouch) { }\r\n *\r\n * ...\r\n *\r\n * this.threeDeeTouch.isAvailable().then(isAvailable => console.log(\"3D Touch available? \" + isAvailable));\r\n *\r\n * this.threeDeeTouch.watchForceTouches()\r\n *   .subscribe(\r\n *     (data: ThreeDeeTouchForceTouch) => {\r\n *       console.log(\"Force touch %\" + data.force);\r\n *       console.log(\"Force touch timestamp: \" + data.timestamp);\r\n *       console.log(\"Force touch x: \" + data.x);\r\n *       console.log(\"Force touch y: \" + data.y);\r\n *     }\r\n *   );\r\n *\r\n *\r\n * let actions: Array<ThreeDeeTouchQuickAction> = [\r\n *   {\r\n *     type: 'checkin',\r\n *     title: 'Check in',\r\n *     subtitle: 'Quickly check in',\r\n *     iconType: 'Compose'\r\n *   },\r\n *   {\r\n *     type: 'share',\r\n *     title: 'Share',\r\n *     subtitle: 'Share like you care',\r\n *     iconType: 'Share'\r\n *   },\r\n *   {\r\n *     type: 'search',\r\n *     title: 'Search',\r\n *     iconType: 'Search'\r\n *   },\r\n *   {\r\n *     title: 'Show favorites',\r\n *     iconTemplate: 'HeartTemplate'\r\n *   }\r\n * ];\r\n *\r\n * this.threeDeeTouch.configureQuickActions(actions);\r\n *\r\n * this.threeDeeTouch.onHomeIconPressed().subscribe(\r\n *  (payload) => {\r\n *    // returns an object that is the button you presed\r\n *    console.log('Pressed the ${payload.title} button')\r\n *    console.log(payload.type)\r\n *\r\n *  }\r\n * )\r\n * ```\r\n * @interfaces\r\n * ThreeDeeTouchQuickAction\r\n * ThreeDeeTouchForceTouch\r\n */\r\n@Plugin({\r\n  pluginName: 'ThreeDeeTouch',\r\n  plugin: 'cordova-plugin-3dtouch',\r\n  pluginRef: 'ThreeDeeTouch',\r\n  repo: 'https://github.com/EddyVerbruggen/cordova-plugin-3dtouch',\r\n  platforms: ['iOS']\r\n})\r\n\r\nexport class ThreeDeeTouch {\r\n\r\n  /**\r\n   * You need an iPhone 6S or some future tech to use the features of this plugin, so you can check at runtime if the user's device is supported.\r\n   * @returns {Promise<boolean>} returns a promise that resolves with a boolean that indicates whether the plugin is available or not\r\n   */\r\n  @Cordova()\r\n  isAvailable(): Promise<boolean> { return; }\r\n\r\n  /**\r\n   * You can get a notification when the user force touches the webview. The plugin defines a Force Touch when at least 75% of the maximum force is applied to the screen. Your app will receive the x and y coordinates, so you have to figure out which UI element was touched.\r\n   * @returns {Observable<ThreeDeeTouchForceTouch>} Returns an observable that sends a `ThreeDeeTouchForceTouch` object\r\n   */\r\n  @Cordova({\r\n    observable: true\r\n  })\r\n  watchForceTouches(): Observable<ThreeDeeTouchForceTouch> { return; }\r\n\r\n  /**\r\n   * setup the 3D-touch actions, takes an array of objects with the following\r\n   * @param {string} type (optional) A type that can be used `onHomeIconPressed` callback\r\n   * @param {string} title Title for your action\r\n   * @param {string} subtitle (optional) A short description for your action\r\n   * @param {string} iconType (optional) Choose between Prohibit, Contact, Home, MarkLocation, Favorite, Love, Cloud, Invitation, Confirmation, Mail, Message, Date, Time, CapturePhoto, CaptureVideo, Task, TaskCompleted, Alarm, Bookmark, Shuffle, Audio, Update\r\n   * @param {string} iconTemplate (optional) Can be used to provide your own icon\r\n   */\r\n  @Cordova({\r\n    sync: true\r\n  })\r\n  configureQuickActions(quickActions: Array<ThreeDeeTouchQuickAction>): void { }\r\n\r\n  /**\r\n   * When a home icon is pressed, your app launches and this JS callback is invoked.\r\n   * @returns {Observable<any>} returns an observable that notifies you when he user presses on the home screen icon\r\n   */\r\n  onHomeIconPressed(): Observable<any> {\r\n    return new Observable(observer => {\r\n      if (window.ThreeDeeTouch) {\r\n        window.ThreeDeeTouch.onHomeIconPressed = observer.next.bind(observer);\r\n      } else {\r\n        observer.error('3dTouch plugin is not available.');\r\n        observer.complete();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Enable Link Preview.\r\n   * UIWebView and WKWebView (the webviews powering Cordova apps) don't allow the fancy new link preview feature of iOS9.\r\n   */\r\n  @Cordova({\r\n    sync: true\r\n  })\r\n  enableLinkPreview(): void { }\r\n\r\n  /**\r\n   * Disabled the link preview feature, if enabled.\r\n   */\r\n  @Cordova({\r\n    sync: true\r\n  })\r\n  disableLinkPreview(): void { }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}